note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class PLC_GRID2_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	xg: POINTER
			-- Access member `xg`
		require
			exists: exists
		do
			Result := c_xg (item)
		ensure
			result_correct: Result = c_xg (item)
		end

	set_xg (a_value: POINTER) 
			-- Change the value of member `xg` to `a_value`.
		require
			exists: exists
		do
			set_c_xg (item, a_value)
		ensure
			xg_set: a_value = xg
		end

	yg: POINTER
			-- Access member `yg`
		require
			exists: exists
		do
			Result := c_yg (item)
		ensure
			result_correct: Result = c_yg (item)
		end

	set_yg (a_value: POINTER) 
			-- Change the value of member `yg` to `a_value`.
		require
			exists: exists
		do
			set_c_yg (item, a_value)
		ensure
			yg_set: a_value = yg
		end

	zg: POINTER
			-- Access member `zg`
		require
			exists: exists
		do
			Result := c_zg (item)
		ensure
			result_correct: Result = c_zg (item)
		end

	set_zg (a_value: POINTER) 
			-- Change the value of member `zg` to `a_value`.
		require
			exists: exists
		do
			set_c_zg (item, a_value)
		ensure
			zg_set: a_value = zg
		end

	nx: INTEGER
			-- Access member `nx`
		require
			exists: exists
		do
			Result := c_nx (item)
		ensure
			result_correct: Result = c_nx (item)
		end

	set_nx (a_value: INTEGER) 
			-- Change the value of member `nx` to `a_value`.
		require
			exists: exists
		do
			set_c_nx (item, a_value)
		ensure
			nx_set: a_value = nx
		end

	ny: INTEGER
			-- Access member `ny`
		require
			exists: exists
		do
			Result := c_ny (item)
		ensure
			result_correct: Result = c_ny (item)
		end

	set_ny (a_value: INTEGER) 
			-- Change the value of member `ny` to `a_value`.
		require
			exists: exists
		do
			set_c_ny (item, a_value)
		ensure
			ny_set: a_value = ny
		end

feature {NONE} -- Implementation wrapper for struct PLcGrid2

	sizeof_external: INTEGER 
		external
			"C inline use <plplot.h>"
		alias
			"sizeof(PLcGrid2)"
		end

	c_xg (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLcGrid2*)$an_item)->xg
			]"
		end

	set_c_xg (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLcGrid2*)$an_item)->xg =  (PLFLT_NC_MATRIX)$a_value
			]"
		ensure
			xg_set: a_value = c_xg (an_item)
		end

	c_yg (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLcGrid2*)$an_item)->yg
			]"
		end

	set_c_yg (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLcGrid2*)$an_item)->yg =  (PLFLT_NC_MATRIX)$a_value
			]"
		ensure
			yg_set: a_value = c_yg (an_item)
		end

	c_zg (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLcGrid2*)$an_item)->zg
			]"
		end

	set_c_zg (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLcGrid2*)$an_item)->zg =  (PLFLT_NC_MATRIX)$a_value
			]"
		ensure
			zg_set: a_value = c_zg (an_item)
		end

	c_nx (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLcGrid2*)$an_item)->nx
			]"
		end

	set_c_nx (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLcGrid2*)$an_item)->nx =  (PLINT)$a_value
			]"
		ensure
			nx_set: a_value = c_nx (an_item)
		end

	c_ny (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLcGrid2*)$an_item)->ny
			]"
		end

	set_c_ny (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <plplot.h>"
		alias
			"[
				((PLcGrid2*)$an_item)->ny =  (PLINT)$a_value
			]"
		ensure
			ny_set: a_value = c_ny (an_item)
		end

end
